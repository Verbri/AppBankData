@model AppBankData.Models.ListKomputer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
//var selectedStandard = ViewBag.selectedProgramstandar as List<string>;
//var selectedImmanuel = ViewBag.selectedProgramImmanuel as List<string>;
}

@*<p>Selected Program Standar: @string.Join(", ", selectedStandard ?? new List<string>())</p>*@
@*<p>Selected Program Immanuel: @string.Join(", ", selectedImmanuel ?? new List<string>())</p>*@
<div class="row">
    <div class="col-12">
        <div class="card m-0">
            <div class="card-header">
                <div class="row">
                    <div class="col-9">
                        <h4><b>EDIT DATA KOMPUTER</b></h4>
                    </div>
                    @*<div class="col-3">
                            @Html.ActionLink("Tambah Peserta Didik", "Create", null, new { @class = "float-right btn btn-info waves-effect w-md waves-light" })
                        </div>*@
                </div>
            </div>
            <div class="card-body ">
                @using (Html.BeginForm("Edit", "ListKomputer", FormMethod.Post, new { enctype = "multipart/form-data", id = "Edit" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Id_Komputer)

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Computername, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Computername, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Computername, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Workgroup, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.Workgroup, new SelectList(ViewBag.lstWorkgroup, "Id_Workgroup", "Nama_Workgroup"), "", new { @class = "form-control select2" })
                                @Html.ValidationMessageFor(model => model.Workgroup, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Useraccount, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Useraccount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Useraccount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Ipaddress, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Ipaddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Ipaddress, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Access, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Access, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Access, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Motherboard, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Motherboard, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Motherboard, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Os, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Os, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Os, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Office, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Office, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Office, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Hardisk, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Hardisk, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Hardisk, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Processor, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Processor, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Processor, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Ram, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Ram, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Ram, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Printer, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Printer, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Printer, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Lokasi, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Lokasi, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Lokasi, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Programstandar, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.Programstandar, new SelectList(ViewBag.lstApps, "Id_Aplikasi", "Nama_Aplikasi", Model.Programstandar), new { @class = "form-control select2 selectBox", @multiple = "multiple" })
                                <div class="pt-2">
                                    <button type='button' class="btn bg-gradient-primary btn-xs" id='selectAll'>Select All</button>
                                    <button type='button' class="btn bg-gradient-danger btn-xs" id='deselectAll'>Deselect All</button>
                                </div>
                                @Html.ValidationMessageFor(model => model.Programstandar, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Programimmanuel, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.Programimmanuel, new SelectList(ViewBag.lstProgram, "Id_Program", "Nama_Program"), new { @class = "form-control select2 selectBoxProgram", @multiple = "multiple" })
                                <div class="pt-2">
                                    <button type='button' class="btn bg-gradient-primary btn-xs" id='selectAllProgram'>Select All</button>
                                    <button type='button' class="btn bg-gradient-danger btn-xs" id='deselectAllProgram'>Deselect All</button>
                                </div>
                                @Html.ValidationMessageFor(model => model.Programimmanuel, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Logo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Avg, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Avg, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Avg, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Smadav, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Smadav, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Smadav, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Usbblock, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Usbblock, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Usbblock, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Monitor, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Monitor, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Monitor, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Mouse, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Mouse, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mouse, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Keyboard, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Keyboard, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Keyboard, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Cpu, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Cpu, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Cpu, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Ups, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Ups, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Ups, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.MaintenanceCPU, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                <div class="input-group date" id="MaintenanceCPU" data-target-input="nearest">
                                    @Html.EditorFor(model => model.MaintenanceCPU, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @data_target = "#MaintenanceCPU" } })

                                    <div class="input-group-append" data-target="#MaintenanceCPU" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.MaintenanceCPU, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.MaintenanceMonitor, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                <div class="input-group date" id="MaintenanceMonitor" data-target-input="nearest">
                                    @Html.EditorFor(model => model.MaintenanceMonitor, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @data_target = "#MaintenanceMonitor" } })

                                    <div class="input-group-append" data-target="#MaintenanceMonitor" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.MaintenanceMonitor, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.MaintenanceJaringan, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                <div class="input-group date" id="MaintenanceJaringan" data-target-input="nearest">
                                    @Html.EditorFor(model => model.MaintenanceJaringan, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @data_target = "#MaintenanceJaringan" } })

                                    <div class="input-group-append" data-target="#MaintenanceJaringan" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.MaintenanceJaringan, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.MaintenancePrinter, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                <div class="input-group date" id="MaintenancePrinter" data-target-input="nearest">
                                    @Html.EditorFor(model => model.MaintenancePrinter, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @data_target = "#MaintenancePrinter" } })

                                    <div class="input-group-append" data-target="#MaintenancePrinter" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.MaintenancePrinter, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.MaintenanceUPS, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                <div class="input-group date" id="MaintenanceUPS" data-target-input="nearest">
                                    @Html.EditorFor(model => model.MaintenanceUPS, new { htmlAttributes = new { @class = "form-control datetimepicker-input", @data_target = "#MaintenanceUPS" } })

                                    <div class="input-group-append" data-target="#MaintenanceUPS" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.MaintenanceUPS, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Keterangan1, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">

                                @Html.TextAreaFor(model => model.Keterangan1, htmlAttributes: new { @class = "form-control", cols = "50", @rows = "3", @maxlength = "120" })
                                @Html.ValidationMessageFor(model => model.Keterangan1, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.Keterangan2, htmlAttributes: new { @class = "control-label col-md-2 col-form-label" })
                            <div class="col-md-4">
                                <textarea name="Keterangan2" id="Keterangan2" class="form-control" cols="50" rows="3" maxlength="120"></textarea>
                                @Html.ValidationMessageFor(model => model.Keterangan2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.NamaUser, new { htmlAttributes = new { @class = "form-control", @value = "", @hidden = "hidden" } })

                            </div>
                        </div>

                        <div class="form-group row mb-0">
                            <div class="col-8 offset-4">
                                <button type="submit" class="btn btn-primary waves-effect waves-light" onclick="return confirm('Apakah anda yakin akan menyimpan?'); return false();">
                                    SIMPAN
                                </button>
                                @Html.ActionLink("BATAL", "Index", null, new { @class = "btn btn-secondary", @onclick = "return confirm('Apakah anda yakin batal mengedit?'); return false();" })
                            </div>
                        </div>
                    </div>
                }


                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        //Date and time picker

        $(document).ready(function () {
            $('.select2').select2({
                placeholder: "Pilih...",
            });
        let selectedProgramstandar = @Html.Raw(Json.Encode(ViewBag.selectedProgramstandar));
        $('.selectBox').val(selectedProgramstandar).trigger('change');

        // Set pilihan yang terpilih untuk Programimmanuel
        let selectedProgramimmanuel = @Html.Raw(Json.Encode(ViewBag.selectedProgramImmanuel));
        $('.selectBoxProgram').val(selectedProgramimmanuel).trigger('change');
        });

        $('#selectAll').click(function () {
            $('.selectBox option').prop('selected', true);
            $('.selectBox').trigger("change");
        });
        $('#deselectAll').click(function () {
            $('.selectBox option').prop('selected', false);
            $('.selectBox').trigger("change");
        });

        $('#selectAllProgram').click(function () {
            $('.selectBoxProgram option').prop('selected', true);
            $('.selectBoxProgram').trigger("change");
        });
        $('#deselectAllProgram').click(function () {
            $('.selectBoxProgram option').prop('selected', false);
            $('.selectBoxProgram').trigger("change");
        });

    </script>
    <script>
        $(function () {
            $("#MaintenanceCPU").datetimepicker({
                icons: { time: "far fa-clock" },
                format: "YYYY/MM/DD" // Opsional: Tentukan format tanggal
            });
            $("#MaintenanceMonitor").datetimepicker({
                icons: { time: "far fa-clock" },
                format: "YYYY/MM/DD" // Opsional: Tentukan format tanggal
            });
            $("#MaintenanceJaringan").datetimepicker({
                icons: { time: "far fa-clock" },
                format: "YYYY/MM/DD" // Opsional: Tentukan format tanggal
            });
            $("#MaintenancePrinter").datetimepicker({
                icons: { time: "far fa-clock" },
                format: "YYYY/MM/DD" // Opsional: Tentukan format tanggal
            });
            $("#MaintenanceUPS").datetimepicker({
                icons: { time: "far fa-clock" },
                format: "YYYY/MM/DD" // Opsional: Tentukan format tanggal
            });
        });
    </script>

    <script>
        Console.WriteLine("Programstandar: " + ViewBag.selectedProgramstandar);
        Console.WriteLine("Programimmanuel: " + ViewBag.selectedProgramImmanuel);</script>
}
