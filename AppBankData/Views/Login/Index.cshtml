@model AppBankData.Models.LoginView

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/LoginLayout.cshtml";
}

@using (Html.BeginForm("Index", "Login", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <small>@Html.ValidationSummary(true, "", new { @class = "card text-white bg-danger text-center align-center" })</small>
    <div class="input-group row">
        <div class="input-group-append">
            <div class="input-group-text">
                <span class="far fa-user"></span>
            </div>
        </div>
        @Html.EditorFor(model => model.NIK, new { htmlAttributes = new { @class = "form-control", @required = "", @oninvalid = "this.setCustomValidity('Masukkan username anda')", @oninput = "setCustomValidity('')", @placeholder = "Masukkan Username" } })
        @Html.ValidationMessageFor(model => model.NIK, "", new { @class = "text-danger" })

    </div>

    <div class="input-group row">
        <div class="input-group-append">
            <div class="input-group-text">
                <span class="fas fa-key"></span>
            </div>
        </div>
        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @required = "", @oninvalid = "this.setCustomValidity('Masukkan password anda')", @oninput = "setCustomValidity('')", @placeholder = "Masukkan Password" } })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>

    <div class="form-group row text-center">
        <div class="col-12">
            <button class="btn btn-md btn-block btn-primary waves-effect waves-light login-button" type="submit" onclick="btnSave(event, this)">LOGIN</button>
        </div>
    </div>
}

@section scripts{
    <script>
        $(document).ready(function () {
            $("#NIK").focus(); // Fokus ke input username saat halaman dimuat
        });
    $(document).ready(function () {
        var message = "@ViewBag.Message"; // Ambil data dari ViewBag
        if (message.trim() !== "") {
            Toast.fire({
                title: "Informasi",
                position: "top",
                text: message,
                icon: "warning", // Bisa diganti 'error', 'warning', 'info'
                //confirmButtonText: "OK"
                timerProgressBar: true,
               //background: "#FFFF00",
            });
        }
    });

    function btnSave(event, formId) {
        console.log("Tombol diklik, AJAX dimulai...");
            if (event) event.preventDefault(); // Mencegah reload halaman
            var form = $(formId).closest('form');
            console.log("Data yang dikirim:", form.serialize());
            $.ajax({
                url: form.attr('action'),
                type: form.attr('method'),
                data: form.serialize(),
                datatype: "json",
                success: function (response) {
                    console.log("Response dari server:", response);
                    if (response.success) {
                        Toast.fire({
                            icon: "success",
                            position: "top",
                            title: "Login Berhasil",
                            text: "Anda akan diarahkan...",
                            timer: 2000,
                            timerProgressBar: true,
                            showConfirmButton: false
                        }).then(() => {
                            console.log("Redirecting to: ", response.redirectUrl);
                            window.location.href = response.redirectUrl;
                        });
                    } else if (response.status === "error") {
                        Toast.fire({
                            position: "top",
                            icon: "warning",
                            title: "Validasi Gagal!",
                            html: response.message,
                            timerProgressBar: true,
                            timer: 3000,
                        });

                    } else if (response.success == false) {
                        Toast.fire({
                            icon: "error",
                            position: "top",
                            title: "Error!",
                            text: response.message,
                            timerProgressBar: true,
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.log("Error AJAX:", xhr.responseText);
                    Swal.fire({
                        icon: "error",
                        title: "Error!",
                        text: "Terjadi kesalahan dalam pengiriman data"
                    });
                }
            });
    }
    </script>
}

